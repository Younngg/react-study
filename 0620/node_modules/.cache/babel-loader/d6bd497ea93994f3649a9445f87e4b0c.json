{"ast":null,"code":"var _jsxFileName = \"/Users/young/Desktop/react/0620/src/components/ListTotal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PagiNation from 'components/PagiNation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTotal = () => {\n  _s();\n\n  const [lists, setLists] = useState([]);\n  const LIST_PER_PAGE = 10; //한장에 보여질 리스트 수\n\n  const [page, setPage] = useState(1);\n  const startNum = (page - 1) * LIST_PER_PAGE;\n  const endNum = startNum + LIST_PER_PAGE;\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(res => setLists(res));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uAC8C\\uC2DC\\uBB3C \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ul, {\n      children: [...lists].reverse().slice(startNum, endNum).map(_ref => {\n        let {\n          id,\n          title,\n          body\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Li, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"idName\",\n            children: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"listBody\",\n            children: body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PagiNation, {\n      total: lists.length,\n      page: page,\n      setPage: setPage,\n      listPerPage: LIST_PER_PAGE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTotal, \"2c/3kuBqvvtIR384KLEekhjd/YU=\");\n\n_c = ListTotal;\nexport default ListTotal;\nconst Title = styled.h1`\n  font-size: 1.5rem;\n  color: #b66666;\n  text-align: center;\n  margin-top: 2rem;\n`;\n_c2 = Title;\nconst Ul = styled.ul`\n  font-size: 0.875rem;\n  margin: 3rem auto;\n  width: 1000px;\n`;\n_c3 = Ul;\nconst Li = styled.li`\n  border-bottom: 1px solid #ccc;\n  padding: 0.5rem 1rem;\n  display: flex;\n  & > .idName {\n    width: 4rem;\n    color: #333;\n  }\n  & > .listBody {\n    margin-left: 1.5rem;\n    width: 50rem;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    color: #666;\n    text-align: left;\n  }\n  & > .listBody:hover {\n    color: #000;\n  }\n  &:hover {\n    background: rgba(0, 0, 0, 0.1);\n    cursor: pointer;\n  }\n`;\n_c4 = Li;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ListTotal\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Ul\");\n$RefreshReg$(_c4, \"Li\");","map":{"version":3,"names":["React","useState","useEffect","styled","PagiNation","ListTotal","lists","setLists","LIST_PER_PAGE","page","setPage","startNum","endNum","fetch","then","res","json","reverse","slice","map","id","title","body","length","Title","h1","Ul","ul","Li","li"],"sources":["/Users/young/Desktop/react/0620/src/components/ListTotal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PagiNation from 'components/PagiNation';\n\nconst ListTotal = () => {\n  const [lists, setLists] = useState([]);\n  const LIST_PER_PAGE = 10; //한장에 보여질 리스트 수\n  const [page, setPage] = useState(1);\n  const startNum = (page - 1) * LIST_PER_PAGE;\n  const endNum = startNum + LIST_PER_PAGE;\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then((res) => res.json())\n      .then((res) => setLists(res));\n  }, []);\n  return (\n    <div>\n      <Title>게시물 목록</Title>\n      <Ul>\n        {[...lists]\n          .reverse()\n          .slice(startNum, endNum)\n          .map(({ id, title, body }) => {\n            return (\n              <Li key={id}>\n                <span className='idName'>{id}</span>\n                <span className='listBody'>{body}</span>\n              </Li>\n            );\n          })}\n      </Ul>\n      <PagiNation\n        total={lists.length}\n        page={page}\n        setPage={setPage}\n        listPerPage={LIST_PER_PAGE}\n      />\n    </div>\n  );\n};\n\nexport default ListTotal;\n\nconst Title = styled.h1`\n  font-size: 1.5rem;\n  color: #b66666;\n  text-align: center;\n  margin-top: 2rem;\n`;\n\nconst Ul = styled.ul`\n  font-size: 0.875rem;\n  margin: 3rem auto;\n  width: 1000px;\n`;\n\nconst Li = styled.li`\n  border-bottom: 1px solid #ccc;\n  padding: 0.5rem 1rem;\n  display: flex;\n  & > .idName {\n    width: 4rem;\n    color: #333;\n  }\n  & > .listBody {\n    margin-left: 1.5rem;\n    width: 50rem;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    color: #666;\n    text-align: left;\n  }\n  & > .listBody:hover {\n    color: #000;\n  }\n  &:hover {\n    background: rgba(0, 0, 0, 0.1);\n    cursor: pointer;\n  }\n`;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMO,aAAa,GAAG,EAAtB,CAFsB,CAEI;;EAC1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAMU,QAAQ,GAAG,CAACF,IAAI,GAAG,CAAR,IAAaD,aAA9B;EACA,MAAMI,MAAM,GAAGD,QAAQ,GAAGH,aAA1B;EAEAN,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAASR,QAAQ,CAACQ,GAAD,CAFzB;EAGD,CAJQ,EAIN,EAJM,CAAT;EAKA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,EAAD;MAAA,UACG,CAAC,GAAGT,KAAJ,EACEW,OADF,GAEEC,KAFF,CAEQP,QAFR,EAEkBC,MAFlB,EAGEO,GAHF,CAGM,QAAyB;QAAA,IAAxB;UAAEC,EAAF;UAAMC,KAAN;UAAaC;QAAb,CAAwB;QAC5B,oBACE,QAAC,EAAD;UAAA,wBACE;YAAM,SAAS,EAAC,QAAhB;YAAA,UAA0BF;UAA1B;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAM,SAAS,EAAC,UAAhB;YAAA,UAA4BE;UAA5B;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,GAASF,EAAT;UAAA;UAAA;UAAA;QAAA,QADF;MAMD,CAVF;IADH;MAAA;MAAA;MAAA;IAAA,QAFF,eAeE,QAAC,UAAD;MACE,KAAK,EAAEd,KAAK,CAACiB,MADf;MAEE,IAAI,EAAEd,IAFR;MAGE,OAAO,EAAEC,OAHX;MAIE,WAAW,EAAEF;IAJf;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CApCD;;GAAMH,S;;KAAAA,S;AAsCN,eAAeA,SAAf;AAEA,MAAMmB,KAAK,GAAGrB,MAAM,CAACsB,EAAG;AACxB;AACA;AACA;AACA;AACA,CALA;MAAMD,K;AAON,MAAME,EAAE,GAAGvB,MAAM,CAACwB,EAAG;AACrB;AACA;AACA;AACA,CAJA;MAAMD,E;AAMN,MAAME,EAAE,GAAGzB,MAAM,CAAC0B,EAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;MAAMD,E"},"metadata":{},"sourceType":"module"}