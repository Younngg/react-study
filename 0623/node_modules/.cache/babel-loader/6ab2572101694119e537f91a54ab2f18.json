{"ast":null,"code":"var _jsxFileName = \"/Users/young/Desktop/react/0623/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport TodoContainer from './components/TodoContainer/index';\nimport TodoTitleArea from './components/TodoTitleArea/index';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    title: '집에 가기',\n    content: '집에 가고 싶다'\n  }, {\n    title: '점심 먹기',\n    content: '밥먹고 집에 가고 싶다'\n  }]);\n  const [selectedTodoIndex, setSelectedTodoIndex] = useState(0);\n\n  const setTodo = newTodo => {\n    //새로 적은 값으로 todos를 교체\n    const newTodos = [...todos]; //todos가 훼손되지 않도록 복사 새로운 newTodos 배열 생김\n\n    newTodos[selectedTodoIndex] = newTodo;\n    setTodos(newTodos);\n    localStorage.setItem('todo', JSON.stringify(newTodos));\n  };\n\n  const addTodo = () => {\n    setTodos([...todos, {\n      title: 'untitled',\n      content: ''\n    }]);\n    setSelectedTodoIndex(todos.length);\n    localStorage.setItem('todo', JSON.stringify(todos));\n  };\n\n  const deleteTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1); //인덱스부터 한개 삭제된 배열 리턴\n\n    setTodos(newTodos);\n\n    if (index === selectedTodoIndex) {\n      setSelectedTodoIndex(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TodoTitleArea, {\n      todos: todos,\n      setSelectedTodoIndex: setSelectedTodoIndex,\n      selectedTodoIndex: selectedTodoIndex,\n      addTodo: addTodo,\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoContainer, {\n      todo: todos[selectedTodoIndex],\n      setTodo: setTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iBjlIBPCNzVMCgEVw8qhLa9uA3c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoContainer","TodoTitleArea","useState","App","todos","setTodos","title","content","selectedTodoIndex","setSelectedTodoIndex","setTodo","newTodo","newTodos","localStorage","setItem","JSON","stringify","addTodo","length","deleteTodo","index","splice"],"sources":["/Users/young/Desktop/react/0623/src/App.js"],"sourcesContent":["import './App.css';\nimport TodoContainer from './components/TodoContainer/index';\nimport TodoTitleArea from './components/TodoTitleArea/index';\nimport { useState } from 'react';\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      title: '집에 가기',\n      content: '집에 가고 싶다',\n    },\n    {\n      title: '점심 먹기',\n      content: '밥먹고 집에 가고 싶다',\n    },\n  ]);\n  const [selectedTodoIndex, setSelectedTodoIndex] = useState(0);\n\n  const setTodo = (newTodo) => {\n    //새로 적은 값으로 todos를 교체\n    const newTodos = [...todos]; //todos가 훼손되지 않도록 복사 새로운 newTodos 배열 생김\n    newTodos[selectedTodoIndex] = newTodo;\n    setTodos(newTodos);\n    localStorage.setItem('todo', JSON.stringify(newTodos));\n  };\n\n  const addTodo = () => {\n    setTodos([\n      ...todos,\n      {\n        title: 'untitled',\n        content: '',\n      },\n    ]);\n    setSelectedTodoIndex(todos.length);\n    localStorage.setItem('todo', JSON.stringify(todos));\n  };\n\n  const deleteTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1); //인덱스부터 한개 삭제된 배열 리턴\n    setTodos(newTodos);\n    if (index === selectedTodoIndex) {\n      setSelectedTodoIndex(0);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <TodoTitleArea\n        todos={todos}\n        setSelectedTodoIndex={setSelectedTodoIndex}\n        selectedTodoIndex={selectedTodoIndex}\n        addTodo={addTodo}\n        deleteTodo={deleteTodo}\n      />\n      <TodoContainer todo={todos[selectedTodoIndex]} setTodo={setTodo} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,aAAP,MAA0B,kCAA1B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACjC;IACEI,KAAK,EAAE,OADT;IAEEC,OAAO,EAAE;EAFX,CADiC,EAKjC;IACED,KAAK,EAAE,OADT;IAEEC,OAAO,EAAE;EAFX,CALiC,CAAD,CAAlC;EAUA,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,CAAD,CAA1D;;EAEA,MAAMQ,OAAO,GAAIC,OAAD,IAAa;IAC3B;IACA,MAAMC,QAAQ,GAAG,CAAC,GAAGR,KAAJ,CAAjB,CAF2B,CAEE;;IAC7BQ,QAAQ,CAACJ,iBAAD,CAAR,GAA8BG,OAA9B;IACAN,QAAQ,CAACO,QAAD,CAAR;IACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA7B;EACD,CAND;;EAQA,MAAMK,OAAO,GAAG,MAAM;IACpBZ,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;MACEE,KAAK,EAAE,UADT;MAEEC,OAAO,EAAE;IAFX,CAFO,CAAD,CAAR;IAOAE,oBAAoB,CAACL,KAAK,CAACc,MAAP,CAApB;IACAL,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAA7B;EACD,CAVD;;EAYA,MAAMe,UAAU,GAAIC,KAAD,IAAW;IAC5B,MAAMR,QAAQ,GAAG,CAAC,GAAGR,KAAJ,CAAjB;IACAQ,QAAQ,CAACS,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB,EAF4B,CAED;;IAC3Bf,QAAQ,CAACO,QAAD,CAAR;;IACA,IAAIQ,KAAK,KAAKZ,iBAAd,EAAiC;MAC/BC,oBAAoB,CAAC,CAAD,CAApB;IACD;EACF,CAPD;;EASA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,aAAD;MACE,KAAK,EAAEL,KADT;MAEE,oBAAoB,EAAEK,oBAFxB;MAGE,iBAAiB,EAAED,iBAHrB;MAIE,OAAO,EAAES,OAJX;MAKE,UAAU,EAAEE;IALd;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MAAe,IAAI,EAAEf,KAAK,CAACI,iBAAD,CAA1B;MAA+C,OAAO,EAAEE;IAAxD;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAtDQP,G;;KAAAA,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}