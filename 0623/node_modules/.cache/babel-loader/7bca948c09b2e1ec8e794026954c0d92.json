{"ast":null,"code":"var _jsxFileName = \"/Users/young/Desktop/react/0623/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport TodoContainer from './components/TodoContainer/index';\nimport TodoTitleArea from './components/TodoTitleArea/index';\nimport { useState } from 'react';\nimport { setItem, getItem } from './lib/storage';\nimport debounce from 'lodash.debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(getItem('todo') || []);\n  const [selectedTodoIndex, setSelectedTodoIndex] = useState(0);\n\n  const setTodo = newTodo => {\n    //새로 적은 값으로 todos를 교체\n    const newTodos = [...todos]; //todos가 훼손되지 않도록 복사 새로운 newTodos 배열 생김\n\n    newTodos[selectedTodoIndex] = newTodo;\n    setTodos(newTodos);\n    setItem('todo', newTodos);\n  };\n\n  const addTodo = () => {\n    const newTodos = [...todos, {\n      title: 'untitled',\n      content: ''\n    }];\n    setTodos(newTodos);\n    setSelectedTodoIndex(todos.length);\n    setItem('todo', newTodos);\n  };\n\n  const deleteTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1); //인덱스부터 한개 삭제된 배열 리턴\n\n    setTodos(newTodos);\n\n    if (index === selectedTodoIndex) {\n      setSelectedTodoIndex(0);\n    }\n\n    setItem('todo', newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TodoTitleArea, {\n      todos: todos,\n      setSelectedTodoIndex: setSelectedTodoIndex,\n      selectedTodoIndex: selectedTodoIndex,\n      addTodo: addTodo,\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoContainer, {\n      todo: todos[selectedTodoIndex],\n      setTodo: setTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yt87jYWTlGpUuzQQAbRnz4O/Dyo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoContainer","TodoTitleArea","useState","setItem","getItem","debounce","App","todos","setTodos","selectedTodoIndex","setSelectedTodoIndex","setTodo","newTodo","newTodos","addTodo","title","content","length","deleteTodo","index","splice"],"sources":["/Users/young/Desktop/react/0623/src/App.js"],"sourcesContent":["import './App.css';\nimport TodoContainer from './components/TodoContainer/index';\nimport TodoTitleArea from './components/TodoTitleArea/index';\nimport { useState } from 'react';\nimport { setItem, getItem } from './lib/storage';\nimport debounce from 'lodash.debounce';\n\nfunction App() {\n  const [todos, setTodos] = useState(getItem('todo') || []);\n  const [selectedTodoIndex, setSelectedTodoIndex] = useState(0);\n\n  const setTodo = (newTodo) => {\n    //새로 적은 값으로 todos를 교체\n    const newTodos = [...todos]; //todos가 훼손되지 않도록 복사 새로운 newTodos 배열 생김\n    newTodos[selectedTodoIndex] = newTodo;\n    setTodos(newTodos);\n    setItem('todo', newTodos);\n  };\n\n  const addTodo = () => {\n    const newTodos = [\n      ...todos,\n      {\n        title: 'untitled',\n        content: '',\n      },\n    ];\n    setTodos(newTodos);\n    setSelectedTodoIndex(todos.length);\n    setItem('todo', newTodos);\n  };\n\n  const deleteTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1); //인덱스부터 한개 삭제된 배열 리턴\n    setTodos(newTodos);\n    if (index === selectedTodoIndex) {\n      setSelectedTodoIndex(0);\n    }\n    setItem('todo', newTodos);\n  };\n\n  return (\n    <div className='App'>\n      <TodoTitleArea\n        todos={todos}\n        setSelectedTodoIndex={setSelectedTodoIndex}\n        selectedTodoIndex={selectedTodoIndex}\n        addTodo={addTodo}\n        deleteTodo={deleteTodo}\n      />\n      <TodoContainer todo={todos[selectedTodoIndex]} setTodo={setTodo} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,aAAP,MAA0B,kCAA1B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,eAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,OAAO,CAAC,MAAD,CAAP,IAAmB,EAApB,CAAlC;EACA,MAAM,CAACK,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,CAAC,CAAD,CAA1D;;EAEA,MAAMS,OAAO,GAAIC,OAAD,IAAa;IAC3B;IACA,MAAMC,QAAQ,GAAG,CAAC,GAAGN,KAAJ,CAAjB,CAF2B,CAEE;;IAC7BM,QAAQ,CAACJ,iBAAD,CAAR,GAA8BG,OAA9B;IACAJ,QAAQ,CAACK,QAAD,CAAR;IACAV,OAAO,CAAC,MAAD,EAASU,QAAT,CAAP;EACD,CAND;;EAQA,MAAMC,OAAO,GAAG,MAAM;IACpB,MAAMD,QAAQ,GAAG,CACf,GAAGN,KADY,EAEf;MACEQ,KAAK,EAAE,UADT;MAEEC,OAAO,EAAE;IAFX,CAFe,CAAjB;IAOAR,QAAQ,CAACK,QAAD,CAAR;IACAH,oBAAoB,CAACH,KAAK,CAACU,MAAP,CAApB;IACAd,OAAO,CAAC,MAAD,EAASU,QAAT,CAAP;EACD,CAXD;;EAaA,MAAMK,UAAU,GAAIC,KAAD,IAAW;IAC5B,MAAMN,QAAQ,GAAG,CAAC,GAAGN,KAAJ,CAAjB;IACAM,QAAQ,CAACO,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB,EAF4B,CAED;;IAC3BX,QAAQ,CAACK,QAAD,CAAR;;IACA,IAAIM,KAAK,KAAKV,iBAAd,EAAiC;MAC/BC,oBAAoB,CAAC,CAAD,CAApB;IACD;;IACDP,OAAO,CAAC,MAAD,EAASU,QAAT,CAAP;EACD,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,aAAD;MACE,KAAK,EAAEN,KADT;MAEE,oBAAoB,EAAEG,oBAFxB;MAGE,iBAAiB,EAAED,iBAHrB;MAIE,OAAO,EAAEK,OAJX;MAKE,UAAU,EAAEI;IALd;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MAAe,IAAI,EAAEX,KAAK,CAACE,iBAAD,CAA1B;MAA+C,OAAO,EAAEE;IAAxD;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA/CQL,G;;KAAAA,G;AAiDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}